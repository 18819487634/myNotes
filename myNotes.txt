1.把文件推到git仓库的步骤：
    1>在git上创建一个新的仓库
    2>在本地git bash 执行git init  （会多一个.git的文件夹，Git用它来跟踪和管理版本库）
    3>git add .     把本地文件提交变成待推送状态
    4>执行git remote add otigin https://github.com//18819487634/仓库名.git   把待推送文件和远程的git仓库联系在一起
    5>git push -u origin master     推送到git仓库的master分支(即主分支)。也可以通过sourceTree(版本管理工具)将本地文件推到git仓库即可

2.给父元素声明<div class="background" :style="{ minHeight: minHeight}"></div>     //第一层div
    data () {
        return {
            minHeight: document.documentElement.clientHeight + 'px'
        }
    }
  这样可以适配不同的手机终端
  clientHeight 元素可视区域的高度，计算公式：clientHeight = topPadding + bottomPadding + height - 水平滚动条高度
  
  offsetHeight = padding + height + border = clientHeight + 水平滚动条高度 + 边框
  
3.li标签前的圆点样式
    首先设置list-style none ---->然后li::before{ content: '●', color: red}    content里的内容随意输入。
    
    vue中的实现1.list-style none ---->  &>li                         <ul>
                                          ::before                      <li><span></span>evan</li>      //span标签放哪就会在哪里插入●
                                            content '●'                 <li><span></span>zhong</li>
                                            color red                </ul>   

4.快速修改线上的功能要用热更         git工作流

5.css   强制不换行：white-space: nowrap
        自动换行：   word-wrap:  break-word
        强制英文单词断行：  word-break:break-all
        超出显示省略号：    text-over:ellipsis, overflow: hidden
        超出显示省略号：    text-over:ellipsis, overflow: hidden

6.时间选择器标签<mt-datetime-picker></mt-datetime-picker>
    <mt-datetime-picker
      ref="timePicker"              //通过this.$refs.timePicker.open()显示出来
      type="time"
      cancelText="取消"
      confirmText="确认"
      :startHour="startHour"
      :endHour="endHour"
      :value="timePicker.value || projectDetail.remind_at"
      @confirm="timePickerConfirm">
    </mt-datetime-picker>
    
7.后台通过文本编辑框输入的文本，通过后端返回给前端(手机端)接受时要用v-html，因为有可能是加粗加大的字体。

8.css的 @media 用于适配特殊的手机终端。可以放在样式的任意位置。
    @media screen and (width: 375px)    //对于屏幕宽度375px的终端采用一下样式。ps：iphone6、7的屏幕宽度为375px
        .head-content
            font-size px2rem(30)
            margin-right px2rem(30)

9.定义组件需要抽象出通用业务，如果一个组件里面的业务代码都写死了，不能被公用，那么就不算是组件。而是单纯引入的界面。

10. :active CSS伪类代表一个元素，通常用户按下鼠标时启动。:active伪类会被后续链路相关的伪类覆盖(:link、:hover、:visited)

11. vue中最常用的生命阶段：created、mounted、activated、deactivated。
    页面第一次进入：created-->mounted-->activated-->(退出时才触发)deactivated
    当页面再次进入时(前进或者后退)时，只触发activated

12. 安装vue-wechat-title依赖，可以通过meta来在路由中配置微信导航栏的标题。
    {
        path: 'list',
        name: 'Home',
        meta: {
            title: '家'
        },
        component (resolve) {
            require.ensure([], () => resolve(require('src/views/Home.vue')), 'Home')
        }
    }
    
13. 表格单元Table Cell居中，好用。

14. vue中的Date()已经格式化，可以通过Data.parse(new Date())把格式化的时间转换为时间戳。

15. vue项目中的配置文件:
        .editconfig文件帮助开发人员在不同的编辑器和IDE之间定义和维护一致的编码方式，与版本控制系统配合使用。
        
        .babelrc文件是Babel的配置文件，放在根目录。Babel是转码器，将ES6---->ES5从而在现有环境执行。
        
        .ESLint是识别ECMAScript并按规则给出报告的代码检测工具，其被设置为完全可配置，因为可以完全按照自己的规则来报告，
            .eslintrc是其配置文件（放在根目录），团队使用ESLint即同意编码规范。
            
        Svgo是一个基于Nodejs的工具，用于优化SVG矢量图形文件。

15. 设置浏览器导航栏左上角图标
    <link rel="shortcut icon" href="./static/assets/head.ico">      // 注意：要用ico文件格式的图
    
16. git MV 旧文件名.vue 新文件名.vue

17. 缓存

18. vue表格中插入图片， <template slot-scope="scope">
                            <img :src="scope.row.avator" style="width:36px height:36px">
                        </template>

19. Qs库是用来把URL中的参数转为对象，将对象转为URL参数形式。

20. 绝对定位absolute不能乱用，有时需要给父组件添加relative属性。

21. loading状态，在获取到数据前（即调用获取数据的接口前面）把loading设为true，然后显示出相应的样式、图片文字等。获取到数据后在将loading设为false，

22. 添加拦截用于防止重复点击提交。
    submit(){
        if(this.seading) {
            console.log('别急正在提交')
            return              // 这个return不止会退出if，并且退出submit。
        }
        this.seading = true
        this.submitSomething() {
            this.seading = false
        }
        
    }

23. div 一行显示，可以使用float属性或者display inline.

24. 导航守卫vue-router提供导航守卫主要用来通过跳转或取消的方式守卫导航。
    每个守卫方法接收三个参数：
        to：Route：即将要进入的目标路由
        from：Route：当前导航正要离开的路由
        next：Function：一定要调用该方法来resolve这个钩子。
        
25. Vue.nextTick([callbacj, context])
    用法： 在下次DOM更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的DOM。
    
26. router.push()的方法跳转会产生历史记录，即可以通过返回按钮回到上个页面。
    router.replace()的方法跳转不会产生历史记录，即不能通过返回按钮回到上个页面。
    
27. css滤镜filter属性提供图形特效：像模糊，锐化，元素变色。
    设置高斯模糊示例：
        .background-img
            position fixed
            top 0
            background-size cover
            filter blur(5px)
            overflow-y auto
            box-sizing border-box
            transform scale(1.1)
28. img的clip属性可以剪切图片，表示以图片左上角为原点，定义一个上，右，下，左的矩形框减除想要的大小。
    img{
        position: absolute;
        clip: rect(0px 200px 100px 0)
    }
    
29. img的alt属性可以添加图片显示失败时的提示文字，文字的样式通过img的父类定义即可。

30. 使用typeof可以判断数据类型
        let test = 'qwer'
        let test1 = 123
        console.log(typeof test1)
        console.log(typeof test)    

31. 打开指定链接window.location.href = this.url

32. element中的table用法：如果想要对表格中的数据做操作，可以使用:formatter="formatterMethod"
    示例：
        <el-table
        :data="channelList"
        :style="{width: boxWidth}">
            <el-table-column
              label="渠道类型"
              :formatter="formatterMethod">
            </el-table-column>
        </el-table>
    methods: {
        formatterMethod (row, column) {         //  传入一行数据，然后根据其中的数据做判读，return用于显示
            if (row.channel_type === 'project') {
                return '项目渠道‘
            }
        }
    }

33. element或者iview的表格都有align样式，用于调整列对齐样式，默认为左对齐。left，center，right

34. 监听？？    vuex很好用？？

35. 按钮被点击时添加样式：
    <div class="button" @click="goTest"></div>
    <style>
        .button
            background blue
        .button: active
            bakcground red              // 当按钮被按住时变成红色
    </style>
    
36. @click.stop="methods" 用于阻止事件继续传播，主要用于内外层都有@click方法时，在内层使用stop阻止传播到外层。

37. vue中只有放在data中的属性才是响应式的，即当数据改变时，视图会重新渲染。对于存放在vuex中的则需要在vuex中更新才会重新渲染。
    如果使用了Object.freeze()，这将会组织修改现有的属性，系统无法再追踪变化。

38. :hover CSS伪类适用于用户使用指示设备虚指一个元素的情况，这个样式会被任何与链接相关的伪类重写，想:link,:visited,:active等。
    为了确保生效，:hover规则需要放在:link和:visited规则之后，但是在:actived之前。
    
39. 调用接口需要传递数组时，需要使用JSON.stringify()函数将JavaScript对象转换为json数据。这样后台才能解析该数组。
    或者把该数组转换为字符串给后台解析，this.arrayList.join()。

40. <div v-bind:style="[baseStyle, overridingStyles]"></div>
    使用数组语法可以将多个样式对象应用到同一个元素上。

41. v-if和v-show的区别：
    v-if是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。
    v-if也是惰性的：如果在初始渲染时条件为假，则什么也不做，直到条件第一次变为真时，才开始渲染条件块。
    v-show不管初始条件是什么，元素总是会被渲染，并且只是简单地基于CSS进行切换。
    一般来说，v-if有跟高的切换开销，二v-show有更高的初始渲染开销。
        注意：不推荐同时使用v-if和v-for。
        
42. 由于JavaScript的限制，Vue不能检测到一下数组的变动：
        1.当利用索引直接改变一项时， vm.items[index] = newValue
        2. 当修改数组的长度时， vm.items.length = newLength
        示例：
            new Vue({
                data: {
                    items: ['a', 'b', 'c']
                }
            )}
            this.items[1] = 'd'     //不是响应性的，即不会重新渲染，页面上的值不会发生改变;
            this.items.length = 2   //不是响应性的，即不会重新渲染，页面不会发生改变;
    为了解决第一个问题可以使用Vue.set()方法
        Vue.set(this.items, index, newValue)
    或者：this.items.splice(index, 1, newValue)
    为了解决第二个问题可以使用splice()方法
        this.items.splice(newLength)
以上通常在Vuex中使用。详细学习Vuex！！！

43. 由于JavaScript的限制，Vue不能检测对象属性的添加或删除，对于已经创建的实例，Vue不能动态添加根级别的响应式属性。但是，可以使用Vue.set(Object, key, value)方法向嵌套对象添加响应式属性
        new Vue({
            data: {
                usesrProfile: {
                    name: 'jay'
                }
            }
        )}
        使用Vue.set(this.userProfile, 'age', 22) 可以添加一个新的age属性到嵌套的UserProfile对象。
        
44. 当v-for和v-if处于统一节点时，v-for的优先级更高

45. Vue.js内建的$emit方法，是用在子组件上的，相当于传递了一个事件名或者props，在父组件上可以给这个事件名绑定上父组件的方法或者其他什么，来改变子组件的内容或状态。 
    $emit('someMethods', 666)   $eimt可以传递两个参数，第一个参数为事件名，第二个参数可以在父组件中使用$event访问到这个值。

46. stylus是更简洁的css样式，即写样式时不需要再写冒号、分号、花括号等。

47. require.ensure()配置路由实现懒加载。
    自动跳转首页的实现是通过：
        {
            path: '*',
            redirect: {name: 'HomePage'}        //即使用重定向来跳转到指定首页
        }

48. 通过设置路径别名可以简化路径的书写：在build/webpack.base.conf.js文件中的resolve---->alias中进行配置即可：
    resolve: {
        alias: {
          'vue$': 'vue/dist/vue.runtime.esm.js',
          'SRC': resolve(['src']),
          'COMPONENTS': resolve(['src', 'components']),
          'IMAGES': resolve(['src', 'assets/images']),
          'VIEWS': resolve(['src', 'views']),
          'SVG': resolve(['src', 'assets/svg'])
        }
    }
    这里只举一些例子，主要是类似IMAGE这种，多级复杂的路径，在使用时需要在前面加上'~'，譬如：
        <img src="~IMAGES/home/avator.png">     等价于  <img src="assets/images/home/avator.png">
        
50. vue子组件中props的type有String、Number、Boolean、Function、Object、Array、Symbol。

51. @param记录传递给一个函数的参数，主要用于对某个函数的参数的各项说明，包括参数名、参数数据类型、描述。

